package Vistas;

import Datos.AlumnoDatos;
import Datos.InscripcionDatos;
import Entidades.Alumno;
import Entidades.Materia;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

public class GestionDeInscripciones extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            if (columna != 0) {
                return true;
            } else {
                return false;
            }
        }
    };

    public GestionDeInscripciones() {
        initComponents();
        armarCabezera();
        cargarCombox();
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icon = new ImageIcon(getClass().getResource("/Imagenes/imgEst1.jpg"));
        Image image = icon.getImage();
        jPanel1 = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbSalir = new javax.swing.JButton();
        jcAlu = new javax.swing.JComboBox<>();
        jrInsc = new javax.swing.JRadioButton();
        jbInsc = new javax.swing.JButton();
        jbNoInsc = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setBackground(new java.awt.Color(0, 153, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Selecionar Alumno");
        jLabel1.setOpaque(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/borrar.png"))); // NOI18N
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jrInsc.setBackground(new java.awt.Color(0, 153, 255));
        jrInsc.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jrInsc.setText("Materias Inscriptas");
        jrInsc.setOpaque(true);
        jrInsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrInscActionPerformed(evt);
            }
        });

        jbInsc.setText("Inscribir");

        jbNoInsc.setText("Anular Inscripcion");

        jLabel2.setBackground(new java.awt.Color(0, 153, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Listado De Materias No Inscriptas");
        jLabel2.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jbInsc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbNoInsc)
                .addGap(151, 151, 151))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalir)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jcAlu, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jrInsc)
                        .addGap(114, 114, 114)
                        .addComponent(jLabel2)))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcAlu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jrInsc)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInsc)
                    .addComponent(jbNoInsc))
                .addGap(23, 23, 23)
                .addComponent(jbSalir)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // Salir
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jrInscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrInscActionPerformed
        // Materia Inscriptas
        modelo.setRowCount(0);
        cargarTabla();
    }//GEN-LAST:event_jrInscActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbInsc;
    private javax.swing.JButton jbNoInsc;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumno> jcAlu;
    private javax.swing.JRadioButton jrInsc;
    // End of variables declaration//GEN-END:variables


    private void armarCabezera() {
        modelo.addColumn("IdInscripcion");
        modelo.addColumn("Nombre");
        modelo.addColumn("Año");
        modelo.addColumn("Anual");
        this.jTable1.setModel(modelo);
    }

    private void cargarCombox() {
        for (Alumno alu : AlumnoDatos.listarAlumnoActivo()) {
            this.jcAlu.addItem(alu);
        }
    }

    private void cargarTabla() {
        Alumno idAlumno = (Alumno) this.jcAlu.getSelectedItem();
        if (this.jrInsc.isSelected()) {
            for (Materia mat : InscripcionDatos.obtenerMateriasCursadas(idAlumno.getIdAlumno())) {
                int id = mat.getIdMateria();
                String nom = mat.getNombre();
                int año = mat.getAño();
                boolean anual = mat.isAnual();
                modelo.addRow(new Object[]{id, nom, año, activoCadena(anual)});
            }
        } else {
            for (Materia mat : InscripcionDatos.obtenerMateriasNoCursadas(idAlumno.getIdAlumno())) {
                int id = mat.getIdMateria();
                String nom = mat.getNombre();
                int año = mat.getAño();
                boolean anual = mat.isAnual();
                modelo.addRow(new Object[]{id, nom, año, activoCadena(anual)});
            }
        }
    }

    private String activoCadena(boolean ok) {
        if (ok) {
            return "Si";
        }
        return "No";
    }

    private boolean activoBoolean(String ok) {
        if (ok.equalsIgnoreCase("true")) {
            return true;
        }
        return false;
    }

}
